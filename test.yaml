apiVersion: v1
kind: ConfigMap
metadata:
  name: funceasy-config
  namespace: funceasy
data:
  version: 'v1.0.0'
  runtime_list: '[{"name":"nodeJS","version":[{"version":"10","images":[{"stage":"install","image":"ziqiancheng/runtime-node:10","cmd": "/npm-install.sh"},{"stage":"run","image":"ziqiancheng/runtime-node:10"}]}], "lang": "javascript", "suffix":"js", "depsName": "package.json", "depsLang": "json"}]'
---
apiVersion: v1
kind: Secret
metadata:
  name: funceasy-mysql-secret
type: Opaque
data:
  ROOT_PASSWORD: YWRtaW5pc3RyYXRvcg==
---
apiVersion: v1
kind: Secret
metadata:
  name: data-source-access
  labels:
    keyName: data_source
    generatedBy: cli # generate by cli
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: gateway-access
  labels:
    keyName: gateway
    generatedBy: cli # generate by cli
type: Opaque
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: funceasy
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: funceasy
  name: funceasy-mysql
spec:
  selector:
    matchLabels:
      app: funceasy-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: funceasy-mysql
    spec:
      containers:
        - image: ziqiancheng/funceasy-mysql:v1.0.0
          name: funceasy-mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: funceasy-mysql-secret
                  key: ROOT_PASSWORD
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: funceasy-mysql
  namespace: funceasy
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: funceasy-mysql
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  namespace: funceasy
  name: data-source-service
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8081
  selector:
    app: data-source-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: funceasy
  name: data-source-service
spec:
  selector:
    matchLabels:
      app: data-source-service
  template:
    metadata:
      labels:
        app: data-source-service
    spec:
      containers:
        - image: ziqiancheng/data-source-service:v1.0.0
          name: data-source-service
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: funceasy-mysql-secret
                  key: ROOT_PASSWORD
            - name: DATABASE_HOST
              value: funceasy-mysql
            - name: FUNCEASY_DATA_SOURCE_SERVICE_PORT
              value: "8081"
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: data-source-access
              mountPath: /data_source_access
      volumes:
        - name: data-source-access
          secret:
            secretName: data-source-access
---
apiVersion: v1
kind: Service
metadata:
  namespace: funceasy
  name: funceasy-gateway
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8082
  selector:
    app: funceasy-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: funceasy
  name: funceasy-gateway
spec:
  selector:
    matchLabels:
      app: funceasy-gateway
  template:
    metadata:
      labels:
        app: funceasy-gateway
    spec:
      containers:
        - image: ziqiancheng/funceasy-gateway:v1.0.0
          name: funceasy-gateway
          env:
            - name: DATA_SOURCE_SERVICE
              value: data-source-service
            - name: FUNCEASY_GATEWAY_SERVICE_PORT
              value: "8082"
          ports:
            - containerPort: 8082
          volumeMounts:
            - name: data-source-access
              mountPath: /data_source_access
            - name: gateway-access
              mountPath: /gateway_access
      volumes:
        - name: data-source-access
          secret:
            secretName: data-source-access
        - name: gateway-access
          secret:
            secretName: gateway-access
---
apiVersion: v1
kind: Service
metadata:
  namespace: funceasy
  name: funceasy-api
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: funceasy-api
---
apiVersion: v1
kind: Service
metadata:
  namespace: funceasy
  name: funceasy-api-nodeport
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30002
  selector:
    app: funceasy-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: funceasy
  name: funceasy-api
spec:
  selector:
    matchLabels:
      app: funceasy-api
  template:
    metadata:
      labels:
        app: funceasy-api
    spec:
      containers:
        - image: ziqiancheng/funceasy-api:v1.0.0
          name: funceasy-api
          env:
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: funceasy-mysql-secret
                  key: ROOT_PASSWORD
            - name: DATABASE_HOST
              value: funceasy-mysql
            - name: FUNCEASY_API_SERVICE_PORT
              value: "8080"
            - name: GATEWAY_SERVICE_HOST
              value: funceasy-gateway
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: gateway-access
              mountPath: /gateway_access
      volumes:
        - name: gateway-access
          secret:
            secretName: gateway-access
---
apiVersion: v1
kind: Service
metadata:
  namespace: funceasy
  name: funceasy-website
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30001
  selector:
    app: funceasy-website
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: funceasy
  name: funceasy-website
spec:
  selector:
    matchLabels:
      app: funceasy-website
  template:
    metadata:
      labels:
        app: funceasy-website
    spec:
      containers:
        - image: ziqiancheng/funceasy-website:v1.0.0
          name: funceasy-website
          ports:
            - containerPort: 80
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: functions.funceasy.com
spec:
  group: funceasy.com
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Function is the Schema for the functions API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FunctionSpec defines the desired state of Function
          properties:
            contentType:
              type: string
            dataServiceToken:
              type: string
            dataSource:
              type: string
            deps:
              type: string
            exposedPorts:
              format: int32
              type: integer
            externalService:
              additionalProperties:
                type: string
              type: object
            function:
              description: 'INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
                Important: Run "operator-sdk generate k8s" to regenerate code after
                modifying this file Add custom validation using kubebuilder tags:
                https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              type: string
            handler:
              type: string
            identifier:
              type: string
            runtime:
              type: string
            size:
              format: int32
              type: integer
            timeout:
              type: string
            version:
              type: string
          required:
            - contentType
            - function
            - handler
            - identifier
            - runtime
            - size
            - timeout
            - version
          type: object
        status:
          description: FunctionStatus defines the observed state of Function
          properties:
            podStatus:
              description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                of cluster Important: Run "operator-sdk generate k8s" to regenerate
                code after modifying this file Add custom validation using kubebuilder
                tags: https://book-v1.book.kubebuilder.io/beyond_basics/generating_crd.html'
              items:
                properties:
                  containerStatuses:
                    items:
                      description: ContainerStatus contains details for the current
                        status of this container.
                      properties:
                        containerID:
                          description: Container's ID in the format 'docker://<container_id>'.
                          type: string
                        image:
                          description: 'The image the container is running. More info:
                            https://kubernetes.io/docs/concepts/containers/images
                            TODO(dchen1107): Which image the container is running
                            with?'
                          type: string
                        imageID:
                          description: ImageID of the container's image.
                          type: string
                        lastState:
                          description: Details about the container's last termination
                            condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format 'docker://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                                - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                        name:
                          description: This must be a DNS_LABEL. Each container in
                            a pod must have a unique name. Cannot be updated.
                          type: string
                        ready:
                          description: Specifies whether the container has passed
                            its readiness probe.
                          type: boolean
                        restartCount:
                          description: The number of times the container has been
                            restarted, currently based on the number of dead containers
                            that have not yet been removed. Note that this is calculated
                            from dead containers. But those containers are subject
                            to garbage collection. This value will get capped at 5
                            by GC.
                          format: int32
                          type: integer
                        started:
                          description: Specifies whether the container has passed
                            its startup probe. Initialized as false, becomes true
                            after startupProbe is considered successful. Resets to
                            false when the container is restarted, or if kubelet loses
                            state temporarily. Is always true when no startupProbe
                            is defined.
                          type: boolean
                        state:
                          description: Details about the container's current condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format 'docker://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                                - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                      required:
                        - image
                        - imageID
                        - name
                        - ready
                        - restartCount
                      type: object
                    type: array
                  initContainerStatuses:
                    items:
                      description: ContainerStatus contains details for the current
                        status of this container.
                      properties:
                        containerID:
                          description: Container's ID in the format 'docker://<container_id>'.
                          type: string
                        image:
                          description: 'The image the container is running. More info:
                            https://kubernetes.io/docs/concepts/containers/images
                            TODO(dchen1107): Which image the container is running
                            with?'
                          type: string
                        imageID:
                          description: ImageID of the container's image.
                          type: string
                        lastState:
                          description: Details about the container's last termination
                            condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format 'docker://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                                - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                        name:
                          description: This must be a DNS_LABEL. Each container in
                            a pod must have a unique name. Cannot be updated.
                          type: string
                        ready:
                          description: Specifies whether the container has passed
                            its readiness probe.
                          type: boolean
                        restartCount:
                          description: The number of times the container has been
                            restarted, currently based on the number of dead containers
                            that have not yet been removed. Note that this is calculated
                            from dead containers. But those containers are subject
                            to garbage collection. This value will get capped at 5
                            by GC.
                          format: int32
                          type: integer
                        started:
                          description: Specifies whether the container has passed
                            its startup probe. Initialized as false, becomes true
                            after startupProbe is considered successful. Resets to
                            false when the container is restarted, or if kubelet loses
                            state temporarily. Is always true when no startupProbe
                            is defined.
                          type: boolean
                        state:
                          description: Details about the container's current condition.
                          properties:
                            running:
                              description: Details about a running container
                              properties:
                                startedAt:
                                  description: Time at which the container was last
                                    (re-)started
                                  format: date-time
                                  type: string
                              type: object
                            terminated:
                              description: Details about a terminated container
                              properties:
                                containerID:
                                  description: Container's ID in the format 'docker://<container_id>'
                                  type: string
                                exitCode:
                                  description: Exit status from the last termination
                                    of the container
                                  format: int32
                                  type: integer
                                finishedAt:
                                  description: Time at which the container last terminated
                                  format: date-time
                                  type: string
                                message:
                                  description: Message regarding the last termination
                                    of the container
                                  type: string
                                reason:
                                  description: (brief) reason from the last termination
                                    of the container
                                  type: string
                                signal:
                                  description: Signal from the last termination of
                                    the container
                                  format: int32
                                  type: integer
                                startedAt:
                                  description: Time at which previous execution of
                                    the container started
                                  format: date-time
                                  type: string
                              required:
                                - exitCode
                              type: object
                            waiting:
                              description: Details about a waiting container
                              properties:
                                message:
                                  description: Message regarding why the container
                                    is not yet running.
                                  type: string
                                reason:
                                  description: (brief) reason the container is not
                                    yet running.
                                  type: string
                              type: object
                          type: object
                      required:
                        - image
                        - imageID
                        - name
                        - ready
                        - restartCount
                      type: object
                    type: array
                  podName:
                    type: string
                  podPhase:
                    description: PodPhase is a label for the condition of a pod at
                      the current time.
                    type: string
                required:
                  - containerStatuses
                  - initContainerStatuses
                  - podName
                  - podPhase
                type: object
              type: array
          required:
            - podStatus
          type: object
      type: object
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: function-operator
  namespace: funceasy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: function-operator
  namespace: funceasy
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - services/finalizers
      - endpoints
      - persistentvolumeclaims
      - events
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - monitoring.coreos.com
    resources:
      - servicemonitors
    verbs:
      - get
      - create
  - apiGroups:
      - apps
    resourceNames:
      - function-operator
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - replicasets
      - deployments
    verbs:
      - get
  - apiGroups:
      - funceasy.com
    resources:
      - '*'
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: function-operator
  namespace: funceasy
subjects:
  - kind: ServiceAccount
    name: function-operator
roleRef:
  kind: Role
  name: function-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: function-operator
  namespace: funceasy
spec:
  replicas: 1
  selector:
    matchLabels:
      name: function-operator
  template:
    metadata:
      labels:
        name: function-operator
    spec:
      serviceAccountName: function-operator
      containers:
        - name: function-operator
          # Replace this with the built image name
          image: ziqiancheng/function-operator:v1.0.0
          command:
            - function-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "function-operator"
